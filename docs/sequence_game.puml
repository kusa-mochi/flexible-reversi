@startuml sequence_game

actor Player1
participant Client1
participant Server
database DB
participant Client2
actor Player2

' Player1による部屋作成

Player1 -[#Green]> Client1 : 開始　部屋の作成
Client1 -[#Green]> Client1 : 表示　部屋作成画面
Player1 -[#Green]> Client1 : 入力　部屋の名前
Player1 -[#Green]> Client1 : 入力　パスワード指定など
Player1 -[#Green]> Client1 : 入力　ステージ設定
Player1 -[#Green]> Client1 : OK
Client1 -[#Green]> Server : 部屋作成
Server -[#Green]> DB : リセット\n該当No.の部屋情報
activate DB
DB -[#Green]-> Server : リセット完了
deactivate DB
Server -[#Green]> DB : 書込　部屋の初期情報\nパスワードハッシュ含む
activate DB
DB -[#Green]-> Server : 書込完了
deactivate DB
Server -[#Green]-> Client1 : 通知　部屋一覧更新
Server -[#Green]-> Client2 : 通知　部屋一覧更新
Client1 -[#Green]> Client1 : 対局画面に遷移

' Player2参戦

Player2 -[#Green]> Client2 : 押下　「対局」ボタン
Client2 -[#Green]> Client2 : 表示　対戦用パスワード入力画面
Player2 -[#Green]> Client2 : 入力　対戦用パスワード
Client2 -[#Green]> Server : パスワード転送
Server -[#Green]> Server : パスワードハッシュ計算
Server -[#Green]> DB : 保存済パスワードハッシュ取得
activate DB
DB -[#Green]-> Server : 保存済パスワードハッシュ
deactivate DB
Server -[#Green]> Server : パスワードハッシュ比較
alt パスワードハッシュが一致した場合
    Server -[#Green]> DB : 保存　Client2のWebSocket 接続ID
    activate DB
    DB -[#Green]-> Server : 保存完了
    deactivate DB
    Server -[#Green]> DB : 取得　Player1ニックネーム、盤面情報
    activate DB
    DB -[#Green]-> Server : Player1ニックネーム、盤面情報
    deactivate DB
    Server -[#Green]> Client2 : パスワードOK、Player1ニックネーム、盤面情報
    Client2 -[#Green]> Client2 : 表示　対局前確認画面
    Player2 -[#Green]> Client2 : OK
    Client2 -> Client2 : 対局画面表示
    Client2 -> Server : 対局開始、Player2ニックネーム
    Server -> DB : 取得　WebSocket 接続ID
    activate DB
    DB --> Server : WebSocket 接続ID
    deactivate DB
    Server -> Server : WebSocket 接続ID比較
    alt WebSocket接続IDが一致した場合
        Server -> DB : 保存　Player2ニックネーム
        activate DB
        DB --> Server : 保存完了
        deactivate DB
        Server -> Client1 : Player2ニックネーム
        Client1 -> Client1 : 表示　対局開始メッセージ
        Server -> Client2 : 対局開始合図
        Client2 -> Client2 : 表示　対局開始メッセージ
        Player1 -> Client1 : 石を置く
        Client1 -> Server : 石を置く
        Server -> Server : 石を置けるかチェック
        Server -> Server : 石を置く
        Server -> Server : 次のターンにPlayer2が\n石を置けるかチェック
        Server -> DB : 更新\n盤面状態、次のプレイヤー
        activate DB
        DB --> Server : 更新完了
        deactivate DB
        Server -> Client1 : 通知　更新後盤面状態
        Server -> Client2 : 通知　更新後盤面状態
    end
end

@enduml
